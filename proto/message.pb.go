// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	proto1 "github.com/wollac/autopeering/peer/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Ping struct {
	// protocol version number
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// string form of the return address (e.g. "192.0.2.1:25", "[2001:db8::1]:80")
	From string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// string form of the recipient address
	To string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// unix time
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Ping) Reset()         { *m = Ping{} }
func (m *Ping) String() string { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()    {}
func (*Ping) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{0}
}

func (m *Ping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ping.Unmarshal(m, b)
}
func (m *Ping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ping.Marshal(b, m, deterministic)
}
func (m *Ping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ping.Merge(m, src)
}
func (m *Ping) XXX_Size() int {
	return xxx_messageInfo_Ping.Size(m)
}
func (m *Ping) XXX_DiscardUnknown() {
	xxx_messageInfo_Ping.DiscardUnknown(m)
}

var xxx_messageInfo_Ping proto.InternalMessageInfo

func (m *Ping) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Ping) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Ping) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Ping) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type Pong struct {
	// hash of the ping packet
	PingHash []byte `protobuf:"bytes,1,opt,name=ping_hash,json=pingHash,proto3" json:"ping_hash,omitempty"`
	// string form of the recipient address
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pong) Reset()         { *m = Pong{} }
func (m *Pong) String() string { return proto.CompactTextString(m) }
func (*Pong) ProtoMessage()    {}
func (*Pong) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{1}
}

func (m *Pong) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pong.Unmarshal(m, b)
}
func (m *Pong) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pong.Marshal(b, m, deterministic)
}
func (m *Pong) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pong.Merge(m, src)
}
func (m *Pong) XXX_Size() int {
	return xxx_messageInfo_Pong.Size(m)
}
func (m *Pong) XXX_DiscardUnknown() {
	xxx_messageInfo_Pong.DiscardUnknown(m)
}

var xxx_messageInfo_Pong proto.InternalMessageInfo

func (m *Pong) GetPingHash() []byte {
	if m != nil {
		return m.PingHash
	}
	return nil
}

func (m *Pong) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type PeersRequest struct {
	// unix time
	Timestamp            int64    `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeersRequest) Reset()         { *m = PeersRequest{} }
func (m *PeersRequest) String() string { return proto.CompactTextString(m) }
func (*PeersRequest) ProtoMessage()    {}
func (*PeersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{2}
}

func (m *PeersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersRequest.Unmarshal(m, b)
}
func (m *PeersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersRequest.Marshal(b, m, deterministic)
}
func (m *PeersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersRequest.Merge(m, src)
}
func (m *PeersRequest) XXX_Size() int {
	return xxx_messageInfo_PeersRequest.Size(m)
}
func (m *PeersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PeersRequest proto.InternalMessageInfo

func (m *PeersRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type PeersResponse struct {
	// hash of the corresponding request
	ReqHash []byte `protobuf:"bytes,1,opt,name=req_hash,json=reqHash,proto3" json:"req_hash,omitempty"`
	// list of peers
	Peers                []*proto1.Peer `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *PeersResponse) Reset()         { *m = PeersResponse{} }
func (m *PeersResponse) String() string { return proto.CompactTextString(m) }
func (*PeersResponse) ProtoMessage()    {}
func (*PeersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{3}
}

func (m *PeersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeersResponse.Unmarshal(m, b)
}
func (m *PeersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeersResponse.Marshal(b, m, deterministic)
}
func (m *PeersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeersResponse.Merge(m, src)
}
func (m *PeersResponse) XXX_Size() int {
	return xxx_messageInfo_PeersResponse.Size(m)
}
func (m *PeersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeersResponse proto.InternalMessageInfo

func (m *PeersResponse) GetReqHash() []byte {
	if m != nil {
		return m.ReqHash
	}
	return nil
}

func (m *PeersResponse) GetPeers() []*proto1.Peer {
	if m != nil {
		return m.Peers
	}
	return nil
}

// wrapper to contain all the different messages
type MessageWrapper struct {
	// Types that are valid to be assigned to Message:
	//	*MessageWrapper_Ping
	//	*MessageWrapper_Pong
	//	*MessageWrapper_PeersRequest
	//	*MessageWrapper_PeersResponse
	Message              isMessageWrapper_Message `protobuf_oneof:"message"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *MessageWrapper) Reset()         { *m = MessageWrapper{} }
func (m *MessageWrapper) String() string { return proto.CompactTextString(m) }
func (*MessageWrapper) ProtoMessage()    {}
func (*MessageWrapper) Descriptor() ([]byte, []int) {
	return fileDescriptor_33f3a5e1293a7bcd, []int{4}
}

func (m *MessageWrapper) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWrapper.Unmarshal(m, b)
}
func (m *MessageWrapper) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWrapper.Marshal(b, m, deterministic)
}
func (m *MessageWrapper) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWrapper.Merge(m, src)
}
func (m *MessageWrapper) XXX_Size() int {
	return xxx_messageInfo_MessageWrapper.Size(m)
}
func (m *MessageWrapper) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWrapper.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWrapper proto.InternalMessageInfo

type isMessageWrapper_Message interface {
	isMessageWrapper_Message()
}

type MessageWrapper_Ping struct {
	Ping *Ping `protobuf:"bytes,1,opt,name=ping,proto3,oneof"`
}

type MessageWrapper_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type MessageWrapper_PeersRequest struct {
	PeersRequest *PeersRequest `protobuf:"bytes,3,opt,name=peers_request,json=peersRequest,proto3,oneof"`
}

type MessageWrapper_PeersResponse struct {
	PeersResponse *PeersResponse `protobuf:"bytes,4,opt,name=peers_response,json=peersResponse,proto3,oneof"`
}

func (*MessageWrapper_Ping) isMessageWrapper_Message() {}

func (*MessageWrapper_Pong) isMessageWrapper_Message() {}

func (*MessageWrapper_PeersRequest) isMessageWrapper_Message() {}

func (*MessageWrapper_PeersResponse) isMessageWrapper_Message() {}

func (m *MessageWrapper) GetMessage() isMessageWrapper_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *MessageWrapper) GetPing() *Ping {
	if x, ok := m.GetMessage().(*MessageWrapper_Ping); ok {
		return x.Ping
	}
	return nil
}

func (m *MessageWrapper) GetPong() *Pong {
	if x, ok := m.GetMessage().(*MessageWrapper_Pong); ok {
		return x.Pong
	}
	return nil
}

func (m *MessageWrapper) GetPeersRequest() *PeersRequest {
	if x, ok := m.GetMessage().(*MessageWrapper_PeersRequest); ok {
		return x.PeersRequest
	}
	return nil
}

func (m *MessageWrapper) GetPeersResponse() *PeersResponse {
	if x, ok := m.GetMessage().(*MessageWrapper_PeersResponse); ok {
		return x.PeersResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MessageWrapper) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MessageWrapper_Ping)(nil),
		(*MessageWrapper_Pong)(nil),
		(*MessageWrapper_PeersRequest)(nil),
		(*MessageWrapper_PeersResponse)(nil),
	}
}

func init() {
	proto.RegisterType((*Ping)(nil), "proto.Ping")
	proto.RegisterType((*Pong)(nil), "proto.Pong")
	proto.RegisterType((*PeersRequest)(nil), "proto.PeersRequest")
	proto.RegisterType((*PeersResponse)(nil), "proto.PeersResponse")
	proto.RegisterType((*MessageWrapper)(nil), "proto.MessageWrapper")
}

func init() { proto.RegisterFile("proto/message.proto", fileDescriptor_33f3a5e1293a7bcd) }

var fileDescriptor_33f3a5e1293a7bcd = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x52, 0xb1, 0x6e, 0xea, 0x30,
	0x14, 0x25, 0x21, 0x3c, 0xc8, 0x0d, 0x61, 0x30, 0xef, 0x49, 0x79, 0x6d, 0x87, 0x90, 0xaa, 0x52,
	0x86, 0x8a, 0x48, 0xb0, 0x55, 0xea, 0xc2, 0x94, 0x05, 0x09, 0x79, 0xa9, 0xd4, 0x05, 0x05, 0xe4,
	0x26, 0x91, 0x88, 0x6d, 0x6c, 0xd3, 0xfe, 0x6c, 0x3f, 0xa6, 0xb2, 0x9d, 0x88, 0xd0, 0xc9, 0xf6,
	0xb9, 0xe7, 0xde, 0xe3, 0x73, 0x74, 0x61, 0xce, 0x05, 0x53, 0x2c, 0x6b, 0x88, 0x94, 0x45, 0x49,
	0x96, 0xe6, 0x85, 0x46, 0xe6, 0xb8, 0xfb, 0xc7, 0x09, 0x11, 0x99, 0x25, 0xe8, 0xab, 0xad, 0x26,
	0x07, 0xf0, 0x76, 0x35, 0x2d, 0x51, 0x04, 0xe3, 0x4f, 0x22, 0x64, 0xcd, 0x68, 0xe4, 0xc4, 0x4e,
	0x1a, 0xe2, 0xee, 0x89, 0x10, 0x78, 0x1f, 0x82, 0x35, 0x91, 0x1b, 0x3b, 0xa9, 0x8f, 0xcd, 0x1d,
	0xcd, 0xc0, 0x55, 0x2c, 0x1a, 0x1a, 0xc4, 0x55, 0x0c, 0x3d, 0x80, 0xaf, 0xea, 0x86, 0x48, 0x55,
	0x34, 0x3c, 0xf2, 0x62, 0x27, 0x1d, 0xe2, 0x2b, 0x90, 0xac, 0xc1, 0xdb, 0x31, 0x5a, 0xa2, 0x7b,
	0xf0, 0x79, 0x4d, 0xcb, 0x7d, 0x55, 0xc8, 0xca, 0xa8, 0x4c, 0xf1, 0x44, 0x03, 0x79, 0x21, 0xab,
	0x76, 0xa4, 0xdb, 0x8d, 0x4c, 0x9e, 0x61, 0xba, 0x23, 0x44, 0x48, 0x4c, 0xce, 0x17, 0x22, 0xd5,
	0xad, 0x84, 0xf3, 0x5b, 0x62, 0x0b, 0x61, 0xcb, 0x96, 0x9c, 0x51, 0x49, 0xd0, 0x7f, 0x98, 0x08,
	0x72, 0xee, 0x4b, 0x8d, 0x05, 0x39, 0x1b, 0xa5, 0x05, 0x8c, 0x74, 0x00, 0x32, 0x72, 0xe3, 0x61,
	0x1a, 0xac, 0x02, 0x9b, 0xc4, 0x52, 0x63, 0xd8, 0x56, 0x92, 0x6f, 0x07, 0x66, 0x5b, 0x9b, 0xe2,
	0x9b, 0x28, 0x38, 0x27, 0x02, 0x2d, 0xc0, 0xd3, 0x7f, 0x35, 0xc3, 0xae, 0x4d, 0x3a, 0xbb, 0x7c,
	0x80, 0x4d, 0xc9, 0x50, 0x18, 0x2d, 0x8d, 0x89, 0x1e, 0x85, 0xb5, 0x14, 0x1d, 0xc1, 0x0b, 0x84,
	0x46, 0x61, 0x2f, 0xac, 0x2d, 0x93, 0x61, 0xb0, 0x9a, 0x77, 0xdc, 0x9e, 0xe3, 0x7c, 0x80, 0xa7,
	0xbc, 0x9f, 0xc0, 0x2b, 0xcc, 0xba, 0x5e, 0x6b, 0xd2, 0x24, 0x1d, 0xac, 0xfe, 0xde, 0x36, 0xdb,
	0x5a, 0x3e, 0xc0, 0x21, 0xef, 0x03, 0x1b, 0x1f, 0xc6, 0xed, 0x62, 0x6c, 0x9e, 0xde, 0x1f, 0xcb,
	0x5a, 0x55, 0x97, 0xc3, 0xf2, 0xc8, 0x9a, 0xec, 0x8b, 0x9d, 0x4e, 0xc5, 0x31, 0x2b, 0x2e, 0x8a,
	0xe9, 0x8e, 0x9a, 0x96, 0x76, 0x4d, 0x0e, 0x7f, 0xcc, 0xb1, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xeb, 0x8a, 0x33, 0xd7, 0x57, 0x02, 0x00, 0x00,
}
