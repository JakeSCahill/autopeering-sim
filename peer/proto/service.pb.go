// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peer/proto/service.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnType int32

const (
	ConnType_TCP ConnType = 0
	ConnType_UDP ConnType = 1
)

var ConnType_name = map[int32]string{
	0: "TCP",
	1: "UDP",
}

var ConnType_value = map[string]int32{
	"TCP": 0,
	"UDP": 1,
}

func (x ConnType) String() string {
	return proto.EnumName(ConnType_name, int32(x))
}

func (ConnType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7271203e88dabbb0, []int{0}
}

// ServiceMap defines the mapping between a service ID and its tuple TypePort
// e.g., map[autopeering:&{TCP, 8000}]
type ServiceMap struct {
	Map                  map[string]*TypePort `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ServiceMap) Reset()         { *m = ServiceMap{} }
func (m *ServiceMap) String() string { return proto.CompactTextString(m) }
func (*ServiceMap) ProtoMessage()    {}
func (*ServiceMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_7271203e88dabbb0, []int{0}
}

func (m *ServiceMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMap.Unmarshal(m, b)
}
func (m *ServiceMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMap.Marshal(b, m, deterministic)
}
func (m *ServiceMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMap.Merge(m, src)
}
func (m *ServiceMap) XXX_Size() int {
	return xxx_messageInfo_ServiceMap.Size(m)
}
func (m *ServiceMap) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMap.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMap proto.InternalMessageInfo

func (m *ServiceMap) GetMap() map[string]*TypePort {
	if m != nil {
		return m.Map
	}
	return nil
}

// TypePort defines the service type (e.g., TCP, UDP) and the port number
type TypePort struct {
	Type                 ConnType `protobuf:"varint,1,opt,name=type,proto3,enum=proto.ConnType" json:"type,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TypePort) Reset()         { *m = TypePort{} }
func (m *TypePort) String() string { return proto.CompactTextString(m) }
func (*TypePort) ProtoMessage()    {}
func (*TypePort) Descriptor() ([]byte, []int) {
	return fileDescriptor_7271203e88dabbb0, []int{1}
}

func (m *TypePort) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TypePort.Unmarshal(m, b)
}
func (m *TypePort) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TypePort.Marshal(b, m, deterministic)
}
func (m *TypePort) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TypePort.Merge(m, src)
}
func (m *TypePort) XXX_Size() int {
	return xxx_messageInfo_TypePort.Size(m)
}
func (m *TypePort) XXX_DiscardUnknown() {
	xxx_messageInfo_TypePort.DiscardUnknown(m)
}

var xxx_messageInfo_TypePort proto.InternalMessageInfo

func (m *TypePort) GetType() ConnType {
	if m != nil {
		return m.Type
	}
	return ConnType_TCP
}

func (m *TypePort) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.ConnType", ConnType_name, ConnType_value)
	proto.RegisterType((*ServiceMap)(nil), "proto.ServiceMap")
	proto.RegisterMapType((map[string]*TypePort)(nil), "proto.ServiceMap.MapEntry")
	proto.RegisterType((*TypePort)(nil), "proto.TypePort")
}

func init() { proto.RegisterFile("peer/proto/service.proto", fileDescriptor_7271203e88dabbb0) }

var fileDescriptor_7271203e88dabbb0 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x14, 0xc4, 0xdd, 0xa6, 0xd5, 0xf6, 0x15, 0x35, 0xec, 0x29, 0x14, 0x84, 0x50, 0x14, 0x42, 0x91,
	0x2c, 0xc4, 0x8b, 0x78, 0xb4, 0x15, 0x4f, 0x85, 0xb0, 0xd6, 0x8b, 0x17, 0xd9, 0x86, 0xa5, 0x06,
	0xd3, 0xbc, 0xc7, 0xba, 0xa9, 0xe4, 0xec, 0x17, 0x97, 0xdd, 0xf4, 0xcf, 0xe9, 0xcd, 0xce, 0x6f,
	0x76, 0x0e, 0x03, 0x11, 0x69, 0x6d, 0x04, 0x19, 0xb4, 0x28, 0x7e, 0xb4, 0xd9, 0x95, 0x85, 0x4e,
	0xfd, 0x8b, 0x0f, 0xfc, 0x99, 0xfe, 0x31, 0x80, 0xb7, 0x0e, 0x2c, 0x15, 0xf1, 0x7b, 0x08, 0xb6,
	0x8a, 0x22, 0x16, 0x07, 0xc9, 0x38, 0x9b, 0x74, 0xd1, 0xf4, 0xc4, 0xd3, 0xa5, 0xa2, 0x97, 0xda,
	0x9a, 0x56, 0xba, 0xd8, 0xe4, 0x15, 0x86, 0x07, 0x83, 0x87, 0x10, 0x7c, 0xeb, 0x36, 0x62, 0x31,
	0x4b, 0x46, 0xd2, 0x49, 0x7e, 0x07, 0x83, 0x9d, 0xaa, 0x1a, 0x1d, 0xf5, 0x62, 0x96, 0x8c, 0xb3,
	0xeb, 0x7d, 0xdb, 0xaa, 0x25, 0x9d, 0xa3, 0xb1, 0xb2, 0xa3, 0x4f, 0xbd, 0x47, 0x36, 0x5d, 0xc0,
	0xf0, 0x60, 0xf3, 0x5b, 0xe8, 0xdb, 0x96, 0xb4, 0x6f, 0xba, 0xca, 0xc2, 0xfd, 0xaf, 0x39, 0xd6,
	0xf5, 0xa7, 0xf3, 0xa5, 0xa7, 0x9c, 0x43, 0x9f, 0xd0, 0x58, 0xdf, 0x7d, 0x29, 0xbd, 0x9e, 0xdd,
	0xc0, 0xe8, 0x18, 0xe3, 0x17, 0x10, 0xac, 0xe6, 0x79, 0x78, 0xe6, 0xc4, 0xfb, 0x22, 0x0f, 0xd9,
	0xf3, 0xec, 0x23, 0xd9, 0x94, 0xf6, 0xab, 0x59, 0xa7, 0x05, 0x6e, 0xc5, 0x2f, 0x56, 0x95, 0x2a,
	0x84, 0x6a, 0x2c, 0xba, 0x8d, 0xca, 0x7a, 0x23, 0x4e, 0x5b, 0xad, 0xcf, 0xfd, 0x79, 0xf8, 0x0f,
	0x00, 0x00, 0xff, 0xff, 0xd0, 0xec, 0x62, 0x56, 0x40, 0x01, 0x00, 0x00,
}
